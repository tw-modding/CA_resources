Command: 	enable_ui	
Description: 	Enable ui true|false	
Usage: 		enable_ui(true)
---------------------------------------------		
Command: 	add_restricted_building_level_record	
Description: 	Stop a building from being an building option	
Usage: 		add_restricted_building_level_record("building_key")
---------------------------------------------		
Command: 	remove_restricted_building_level_record	
Description: 	Restore a building option to default	
Usage: 		remove_restricted_building_level_record("building_key")
---------------------------------------------		
Command: 	add_restricted_building_level_record_for_faction	
Description: 	Stop a building from being an building option	
Usage: 		add_restricted_building_level_record("building_key", "faction_key")
---------------------------------------------		
Command: 	remove_restricted_building_level_record_for_faction	
Description: 	Restore a building option to default	
Usage: 		remove_restricted_building_level_record("building_key", "faction_key")
---------------------------------------------		
Command: 	add_custom_battlefield	
Description: 	Instead of a generated map, use a custom map for this location	
Usage: 		add_custom_battlefield(id, x, y, radius, dump_campaign?, loading screen (can be empty), script(can be empty string), battle path (can be empty string), human alliance (0 or 1, required for scripted battles, use any value for non-scripted), launch_battle_immediately (exit campaign without saving), is_land_battle (only used when launching battle without campaign pending battle), force_autoresolve_result (forces the application of the autoresolver result post-battle, regardless of the battle results))
---------------------------------------------		
Command: 	remove_custom_battlefield	
Description: 	Remove a custom map	
Usage: 		remove_custom_battlefield(id)
---------------------------------------------		
Command: 	add_visibility_trigger	
Description: 	Set up a visibility trigger for a player faction, used with LocationUnveiled	
Usage: 		add_visibility_trigger(x, y, "faction_key")
---------------------------------------------		
Command: 	remove_visibility_trigger	
Description: 	Remove a visibility trigger	
Usage: 		remove_visibility_trigger(x, y, "faction_key")
---------------------------------------------		
Command: 	add_location_trigger	
Description: 	Set up a location trigger for a piece belonging to a faction, used with LocationEntered	
Usage: 		add_location_trigger(x, y, radius, "faction_key")
---------------------------------------------		
Command: 	remove_location_trigger	
Description: 	Remove up a location trigger, used with LocationEntered	
Usage: 		add_location_trigger(x, y, radius, "faction_key")
---------------------------------------------		
Command: 	disable_elections	
Description: 	Remove elections from the game	
Usage: 		disable_elections(true/false)
---------------------------------------------		
Command: 	register_movies	
Description: 	Kicks off a movie next change over	
Usage: 		register_movies("path_to_movie")
---------------------------------------------		
Command: 	disable_movement_for_ai_under_shroud	
Description: 	stop ai movement if a AI character is under this player's shroud	
Usage: 		disable_movement_for_ai_under_shroud("Player_faction_key", "AI_faction_key"/context_with_faction)
---------------------------------------------		
Command: 	cancel_actions_for	
Description: 	Cancel the action for a character	
Usage: 		cancel_actions_for(context_with_character)
---------------------------------------------		
Command: 	shown_message	
Description: 	Return if any message boxes currently displayed	
Usage: 		This replaces the old CampaignUI.pending_auto_show_messages function
---------------------------------------------		
Command: 	pending_auto_show_messages	
Description: 	Return if any auto shown messages are queued	
Usage: 		This replaces the old CampaignUI.pending_auto_show_messages function
---------------------------------------------		
Command: 	compare_localised_string	
Description: 	return true if the label matches the text of a component taking localisation into account	
Usage: 		compare_localised_string(UIComponent, "label")
---------------------------------------------		
Command: 	advance_to_next_campaign	
Description: 	move onto the next stage if it exist, this info is set by the frontend	
Usage: 		advance_to_next_campaign()
---------------------------------------------		
Command: 	add_time_trigger	
Description: 	register a timer to fire in a X sec time	
Usage: 		add_time_trigger("id", time, (optional) repeat)
---------------------------------------------		
Command: 	remove_time_trigger	
Description: 	remove a time trigger	
Usage: 		remove_time_trigger("id")
---------------------------------------------		
Command: 	scroll_camera	
Description: 	scroll the camera along a spline. ScrollCamera(compute_valid_endpoint, seconds_it_takes_to_complete, list_of_coodinates...)	
Usage: 		This replaces the old CampaignUI.ScrollCamera function
---------------------------------------------		
Command: 	scroll_camera_with_direction	
Description: 	scroll the camera along a spline. scroll_camera_with_direction(compute_valid_endpoint, seconds_it_takes_to_complete, list_of_coodinates_with_heading...)	
Usage: 		This replaces the old CampaignUI.ScrollCamera function
---------------------------------------------		
Command: 	stop_camera	
Description: 	Stop a scrolling camera.	
Usage: 		This replaces the old CampaignUI.StopCamera function
---------------------------------------------		
Command: 	set_camera_position	
Description: 	Set the camera to the specified position	
Usage: 		set_camera_postion(<target.x>,<target.y>,<distance>,<bearing>,<height>)
---------------------------------------------		
Command: 	get_camera_position	
Description: 	Gets the camera position	
Usage: 		<target.x>,<target.y>,<distance>,<bearing>,<height> get_camera_postion()
---------------------------------------------		
Command: 	fade_scene	
Description: 	Fade the scene to black and back	
Usage: 		fade_scene(<duration_seconds>)
---------------------------------------------		
Command: 	dismiss_advice	
Description: 	Dismisses advice panel in the ui	
Usage: 		This replaces the old CampaignUI.DismissAdvice function
---------------------------------------------		
Command: 	disable_movement_for_character	
Description: 	freeze a character in place, identify the character with any/all info as shown. Seperate by comma and in any order. White space are NOT ignored	
Usage: 		disable_movement_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	disable_movement_for_faction	
Description: 	freeze all characters of a  faction in place	
Usage: 		disable_movement_for_faction("faction_key")
---------------------------------------------		
Command: 	show_shroud	
Description: 	disable the shroud(fog of war)	
Usage: 		show_shroud(true/false)
---------------------------------------------		
Command: 	take_shroud_snapshot	
Description: 	Take snapshot of current shroud	
Usage: 		take_shroud_snapshot()
---------------------------------------------		
Command: 	restore_shroud_from_snapshot	
Description: 	Restore snapshot of shroud	
Usage: 		restore_shroud_from_snapshot()
---------------------------------------------		
Command: 	make_neighbouring_regions_visible_in_shroud	
Description: 	make_neighbouring_regions_visible_in_shroud	
Usage: 		make_neighbouring_regions_visible_in_shroud()
---------------------------------------------		
Command: 	make_neighbouring_regions_seen_in_shroud	
Description: 	make_neighbouring_regions_seen_in_shroud	
Usage: 		make_neighbouring_regions_seen_in_shroud()
---------------------------------------------		
Command: 	make_sea_region_visible_in_shroud	
Description: 	make_sea_region_visible_in_shroud	
Usage: 		make_sea_region_visible_in_shroud("region_key")
---------------------------------------------		
Command: 	make_sea_region_seen_in_shroud	
Description: 	make_sea_region_seen_in_shroud	
Usage: 		make_sea_region_seen_in_shroud("region_key")
---------------------------------------------		
Command: 	force_diplomacy	
Description: 	Force a certain stance of a faction towards another	
Usage: 		force_diplomacy("faction_key", "target_faction", "type listed below", offer, accept)
		trade agreement
		military access
		cancel military access
		alliance
		regions
		technology
		state_gift
		payments
		vassal
		peace
		war
---------------------------------------------		
Command: 	force_diplomacy_new	
Description: 	Force availability of a set of diplomacy types between factions described in the faction and target specifiers. Specifiers can be "all" or "faction:faction_key" or "subculture:subculture_key" or "culture:culture_key"	
Usage: 		force_diplomacy_new("all", "all", "types listed below as a bitmask", offer, accept)
---------------------------------------------		
Command: 	display_turns	
Description: 	Show turn number instead of year	
Usage: 		display_turns(true/false)
---------------------------------------------		
Command: 	stop_user_input	
Description: 	disable interaction during cutscenes	
Usage: 		stop_user_input(true/false)
---------------------------------------------		
Command: 	steal_user_input	
Description: 	steal interaction	
Usage: 		steal_user_input(true/false)
---------------------------------------------		
Command: 	steal_escape_key	
Description: 	steal escape key	
Usage: 		steal_escape_key(true/false)
---------------------------------------------		
Command: 	is_new_game	
Description: 	returns true if it's a new game	
Usage: 		is_new_game()
---------------------------------------------		
Command: 	save_named_value	
Description: 	write the a bool or int to the save game	
Usage: 		save_named_value(name, value, FileHandle)
---------------------------------------------		
Command: 	load_named_value	
Description: 	restore a named variable from the save game, if the value is not found, default is used	
Usage: 		load_named_value(name, default, FileHandle)
---------------------------------------------		
Command: 	disable_shopping_for_ai_under_shroud	
Description: 	Stop the AI from building or training when under the black shroud. This is a toggle, no need to call it every turn.	
Usage: 		disable_shopping_for_ai_under_shroud(true/false)
---------------------------------------------		
Command: 	add_settlement_model_override	
Description: 	use a different model for a settlement	
Usage: 		add_settlement_model_override("settlement_key", "model_name")
---------------------------------------------		
Command: 	add_building_model_override	
Description: 	use a different model for a slot, generated slots are named: settlement_army-admin, settlement_culture, settlement_government, settlement_navy-admin, settlement_ordnance, settlement_minor, settlement_fortification	
Usage: 		add_building_model_override("slot_key", "building_key", "model_name")
---------------------------------------------		
Command: 	remove_settlement_model_override	
Description: 	use the default model	
Usage: 		remove_settlement_model_override("settlement_key")
---------------------------------------------		
Command: 	remove_building_model_override	
Description: 	use the default model	
Usage: 		remove_building_model_override("slot_key", "building_key")
---------------------------------------------		
Command: 	optional_extras_for_episodics	
Description: 	returns extra parameters	
Usage: 		optional_extras_for_episodics()
---------------------------------------------		
Command: 	award_experience_level	
Description: 	increase the experience of an army (increase only! -ve numbers will break the game), identify the character with any/all info as shown. Seperate by comma and in any order. White space are NOT ignored	
Usage: 		award_experience_level("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3", level)
---------------------------------------------		
Command: 	add_agent_experience	
Description: 	Awards experience points to a specified character	
Usage: 		add_agent_experience("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3", points)
---------------------------------------------		
Command: 	enable_auto_generated_missions	
Description: 	Enable or disable non-scripted missions	
Usage: 		enable_auto_generated_missions(false/true)
---------------------------------------------		
Command: 	add_unit_model_overrides	
Description: 	Swap a model for a certain character, needs to be set up at a new session	
Usage: 		add_unit_model_overrides("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3", "Name_of_model")
---------------------------------------------		
Command: 	add_attack_of_opportunity_overrides	
Description: 	Tell a certain character to always or never use attack of opportunity	
Usage: 		add_attack_of_opportunity_overrides("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3", attack?)
---------------------------------------------		
Command: 	remove_attack_of_opportunity_overrides	
Description: 	Let the AI decide attack of opportunity as normal	
Usage: 		remove_attack_of_opportunity_overrides("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	register_instant_movie	
Description: 	register_instant_movie("Movie_name")	
Usage: 		can only register one at a time
---------------------------------------------		
Command: 	register_outro_movie	
Description: 	register_outro_movie("Movie_name")	
Usage: 		can only register one at a time
---------------------------------------------		
Command: 	show_message_event	
Description: 	Show a message event with the specified title, primary detail and secondary detail to the specified faction.  The penultimate parameter indicates if this message persists in the event log.  The final parameter is the message event type index, used to pick message variants with different images and other details.	
Usage: 		show_message_event("faction_key", "title_localisation_key", "primary_detail_localisation_key", "secondary_detail_localisation_key", true, 0)
---------------------------------------------		
Command: 	show_message_event_located	
Description: 	Show a message event with the specified title, primary detail, secondary detail and location to the specified faction.  The penultimate parameter indicates if this message persists in the event log.  The final parameter is the message event type index, used to pick message variants with different images and other details.	
Usage: 		show_message_event("faction_key", "title_localisation_key", "primary_detail_localisation_key", "secondary_detail_localisation_key", 104, 273, false, 0)
---------------------------------------------		
Command: 	grant_unit	
Description: 	Grant the local faction a unit specified by the unit key, unit created in the settlement/slot specified. Unit will only be created if their is an appropriate force in the settlement and the force has room for the unit. This command may fail in some circumstances - ask Ed	
Usage: 		grant_unit("settlement:ita_alpes_maritimes:nice", "Inf_Elite_Grenadier_Guards")
---------------------------------------------		
Command: 	grant_unit_to_character	
Description: 	Create and add a unit (specified by the unit key) to a character's army. Unit will only be created if their is room for the unit in the force. 	
Usage: 		grant_unit_to_character("wh2_main_hef_cha_tyrion_0 ", "wh2_main_hef_inf_spearmen_0")
---------------------------------------------		
Command: 	force_assassination_success_for_human	
Description: 	Force the local faction to succeed at all assassinations	
Usage: 		force_assassination_success_for_human(true/false)
---------------------------------------------		
Command: 	force_garrison_infiltration_success_for_human	
Description: 	Force the local faction to succeed at all garrison infiltration	
Usage: 		force_garrison_infiltration_success_for_human(true/false)
---------------------------------------------		
Command: 	set_tax_rate	
Description: 	Set the tax rate for a faction in a governorship, for a population class, to a specific level (0-4 inclusive)	
Usage: 		set_tax_rate("france", "europe", true (use true to set lower class rate), 4) (sets the tax level for the lower class to extortionate, for the French faction in the europe governorship)
---------------------------------------------		
Command: 	exempt_region_from_tax	
Description: 	Exempt the province containing specified region from tax (use true to exempt)	
Usage: 		exempt_region_from_tax(france, true)
---------------------------------------------		
Command: 	exempt_province_from_tax_for_all_factions_and_set_default	
Description: 	Exempt the province containing specified region from tax, for all factions currently present and set the defualt for future factions (use true to exempt)	
Usage: 		exempt_province_from_tax_for_all_factions_and_set_default(wh_main_reikland, true)
---------------------------------------------		
Command: 	disable_rebellions_worldwide	
Description: 	Disable all rebellions (true to disable)	
Usage: 		disable_rebellions_worldwide(true/false)
---------------------------------------------		
Command: 	force_declare_war	
Description: 	Force faction A to declare war on faction B	
Usage: 		force_declare_war("france", "prussia", bool invite_attacker_allies, bool invite_defender_allies, bool use_command_queue
---------------------------------------------		
Command: 	force_make_peace	
Description: 	Force faction A to declare peace with faction B	
Usage: 		force_make_peace("france", "prussia")
---------------------------------------------		
Command: 	force_confederation	
Description: 	Force faction B to be subsumed into confederation of B	
Usage: 		force_confederation("empire", "stirland")
---------------------------------------------		
Command: 	force_add_trait	
Description: 	Grant the specified character the specified trait. If the character already has the trait, a trait point will be added. Uses standard character lookup system. Final parameter specifies whether the message is shown or not	
Usage: 		force_add_trait("faction:france,surname:Bonaparte", "C_General_Attacker_Good", true, 3, false)
---------------------------------------------		
Command: 	force_remove_trait	
Description: 	Remove the specified trait from the specified character. If the character is past the point of no return in the trait, it will be removed anyway.	
Usage: 		force_remove_trait(("faction:france,surname:Bonaparte", "trait_id")
---------------------------------------------		
Command: 	force_add_ancillary	
Description: 	Grant the specified character the specified ancillary. Uses standard character lookup system	
Usage: 		force_add_ancillary("faction:france,surname:Bonaparte", "Anc_Balloonist")
---------------------------------------------		
Command: 	force_add_and_equip_ancillary	
Description: 	Grant the specified character the specified ancillary. Uses standard character lookup system. Unequips current ancilliary if necessary slot is already occupied.	
Usage: 		force_add_and_equip_ancillary("faction:france,surname:Bonaparte", "Anc_Balloonist")
---------------------------------------------		
Command: 	force_remove_ancillary	
Description: 	Remove the specified ancilliary from the specified character. Uses standard character lookup system	
Usage: 		force_remove_ancillary("faction:france,surname:Bonaparte", "Anc_Balloonist", "remove_to_pool")
---------------------------------------------		
Command: 	force_remove_ancillary_from_faction	
Description: 	Remove all instances of the specified ancillary from every character, and the shared ancillary pool, of the specified faction	
Usage: 		force_remove_ancillary_from_faction(String faction_key, String ancillary_key)
---------------------------------------------		
Command: 	add_ancillary_to_faction	
Description: 	Grant the specified faction the specified ancillary	
Usage: 		add_ancillary_to_faction(string faction_key, string ancillary_key, bool display_event)
---------------------------------------------		
Command: 	force_add_skill	
Description: 	Grant the specified character the specified skill, or adds a point if they already have it. Uses standard character lookup system	
Usage: 		force_add_skill("faction:france,surname:Bonaparte", "skill_key")
---------------------------------------------		
Command: 	remove_skill_point	
Description: 	Remove a skill point from the specified character and skill. Returns true if successful	
Usage: 		remove_skill_point(String character_lookup, String skill_key)
---------------------------------------------		
Command: 	force_reset_skills	
Description: 	Completely resets the skill points of the target character. Does not remove background skills	
Usage: 		force_reset_skills(String character_lookup)
---------------------------------------------		
Command: 	remove_all_background_skills	
Description: 	Forcibly remove all background skills for the character	
Usage: 		remove_all_background_skills(String character_lookup)
---------------------------------------------		
Command: 	add_marker	
Description: 	Add a marker at a position (x, y, z), using a specific VFX, with a specific active state. First parameter is the unique ID	
Usage: 		add_marker("test", "ping_type", 10, 50, 2)
---------------------------------------------		
Command: 	remove_marker	
Description: 	Remove the marker with the specified unique ID	
Usage: 		remove_marker("test")
---------------------------------------------		
Command: 	add_vfx	
Description: 	Add a vfx at a position (x, y, z), using a specific VFX, with a specific active state. First parameter is the unique ID	
Usage: 		add_vfx("test", "vfx_id (campaign_vfx_lookup_table) ", 10, 50, 2)
---------------------------------------------		
Command: 	remove_vfx	
Description: 	Remove the vfx with the specified unique ID	
Usage: 		remove_vfx("test")
---------------------------------------------		
Command: 	force_make_trade_agreement	
Description: 	Force the specified factions to have a trade agreement. If no agreement is possible, nothing will happen	
Usage: 		force_make_trade_agreement("france", "prussia")
---------------------------------------------		
Command: 	move_to	
Description: 	Move the specified character to position X, Y. Uses normal character lookup.  Final parameter specified whether the command goes via the command queue	
Usage: 		move_to("faction:france,surname:619", 10, 60, true)
---------------------------------------------		
Command: 	teleport_to	
Description: 	Immediately teleport the specified character to position X, Y. Uses normal character lookup.  Final parameter specified whether the command goes via the command queue	
Usage: 		teleport_to("faction:france,surname:619", 10, 60, true)
---------------------------------------------		
Command: 	join_garrison	
Description: 	Move the specified character to the specified garrison. Uses normal character lookup and garrison lookup. Works for armies and navies	
Usage: 		join_garrison("faction:france,surname:619", "settlement:france:paris")
---------------------------------------------		
Command: 	leave_garrison	
Description: 	Make the specified character leave his current garrison, and move to positon X, Y. Uses normal character lookup. Works for armies and navies	
Usage: 		leave_garrison("faction:france,surname:619", 50.1, -150.9)
---------------------------------------------		
Command: 	attack	
Description: 	Force a character to attack a target. Uses normal character lookup.  Final parameter specified whether the command goes via the command queue	
Usage: 		attack("faction:oda,surname:619", "faction:chosokabe,surname:7", true)
---------------------------------------------		
Command: 	attack_region	
Description: 	Force a character to attack a region. Uses normal character lookup and region key.  Final parameter specifies whether the command goes via the command queue	
Usage: 		attack_region("faction:oda,surname:619", "region_key", true)
---------------------------------------------		
Command: 	force_attack_of_opportunity	
Description: 	Force a character to attack another character through an attack of opportunity.	
Usage: 		force_attack_of_opportunity(attacker_force_cqi, target_force_cqi, is_ambush <true|false>)
---------------------------------------------		
Command: 	seek_exchange	
Description: 	Make the first character merge with the second character.  Third parameter is whether the exchange UI should appear.  Final parameter specifies whether the command goes via the command queue	
Usage: 		seek_exchange("faction:france,surname:619", "faction:france,surname:620", false, true)
---------------------------------------------		
Command: 	set_looting_options_disabled_for_human	
Description: 	Disable the looting options screen for humans	
Usage: 		set_looting_options_disabled_for_human(true)
---------------------------------------------		
Command: 	disable_saving_game	
Description: 	Prevent the game from being saved	
Usage: 		disable_saving_game(true)
---------------------------------------------		
Command: 	set_non_scripted_traits_disabled	
Description: 	Prevent non scripted traits from being applied	
Usage: 		set_non_scripted_traits_disabled(true)
---------------------------------------------		
Command: 	set_non_scripted_ancillaries_disabled	
Description: 	Prevent non scripted ancillaries from being applied	
Usage: 		set_non_scripted_ancillaries_disabled(true)
---------------------------------------------		
Command: 	set_technology_research_disabled	
Description: 	Disable tech functionality in game	
Usage: 		set_technology_research_disabled(true)
---------------------------------------------		
Command: 	set_liberation_options_disabled	
Description: 	Disable the liberation feature	
Usage: 		set_liberation_options_disabled(true)
---------------------------------------------		
Command: 	set_ui_notification_of_victory_disabled	
Description: 	Disable notification of victory for the UI	
Usage: 		set_ui_notification_of_victory_disabled(true)
---------------------------------------------		
Command: 	enable_movement_for_character	
Description: 	unfreeze a character who was frozen in place, identify the character with any/all info as shown. Seperate by comma and in any order. White space are NOT ignored	
Usage: 		enable_movement_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	enable_movement_for_faction	
Description: 	unfreeze all characters of a faction	
Usage: 		enable_movement_for_faction("faction_key")
---------------------------------------------		
Command: 	create_force	
Description: 	create a navy or army at a position.  Final parameter specified whether the command goes via the command queue	
Usage: 		create_force("faction_key", "unit_list", "region_key", x_position, y_position, exclude_named_characters, "id", true)
---------------------------------------------		
Command: 	create_force_with_general	
Description: 	create a navy or army at a position.  Final parameter specified whether the command goes via the command queue	
Usage: 		create_force_with_general("faction_key", "unit_list", "region_key", x_position, y_position, "general_agent_type_key", "general_agent_subtype_key", "forename_id", "faction_name_id", "family_name_id", "other_name_id", "id", "make_faction_leader")
---------------------------------------------		
Command: 	create_force_with_existing_general	
Description: 	create a navy or army at a position.  Final parameter specified whether the command goes via the command queue	
Usage: 		create_force_with_existing_general("faction:chosokabe,forename:2147274846", "faction_key", "unit_list", "region_key", "x_position", "y_position", "id")
---------------------------------------------		
Command: 	create_force_with_full_diplomatic_discovery	
Description: 	create a navy or army at a position.  Final parameter specified whether the command goes via the command queue	
Usage: 		create_force_with_full_diplomatic_discovery("faction_key", "unit_list", "region_key", x_position, y_position, exclude_named_characters, "id", true)
---------------------------------------------		
Command: 	disable_end_turn	
Description: 	Prevent the turn from being ended	
Usage: 		disable_end_turn(true)
---------------------------------------------		
Command: 	end_turn	
Description: 	End the turn, optionally force at next opportunity (only do this for a player faction)	
Usage: 		end_turn(false)
---------------------------------------------		
Command: 	force_normal_character_locomotion_speed_for_turn	
Description: 	Forces any characters visible to humans to move at normal speed during the current turn if parameter is set to true	
Usage: 		force_normal_character_locomotion_speed(true)
---------------------------------------------		
Command: 	hide_character	
Description: 	Remove a character from the map but leave them alive.  Final parameter specified whether the command goes via the command queue	
Usage: 		hide_character("x:-258,y:-277,r:1", true)
---------------------------------------------		
Command: 	unhide_character	
Description: 	Replace a hidden character onto the map at the specified position.  Final parameter specified whether the command goes via the command queue	
Usage: 		unhide_character("faction:chosokabe,forename:2147274846", -258, -277, true)
---------------------------------------------		
Command: 	add_circle_area_trigger	
Description: 	Set up a circular area trigger, used with AreaEntered/AreaExited.  name is a name for this trigger area. Multiple triggers with the same name act as a single trigger.	
Usage: 		add_circle_area_trigger(x, y, radius, "name", "filter", trigger_on_enter, trigger_on_exit, trigger_once_only)
---------------------------------------------		
Command: 	add_outline_area_trigger	
Description: 	Set up an area trigger, used with AreaEntered/AreaExited.  name is a name for this trigger area.  Multiple triggers with the same name act as a single trigger.	
Usage: 		add_outline_area_trigger("name", "filter", trigger_on_enter, trigger_on_exit, trigger_once_only, list_of_coordinates...)
---------------------------------------------		
Command: 	remove_area_trigger	
Description: 	Remove the names area trigger.	
Usage: 		remove_area_trigger("name")
---------------------------------------------		
Command: 	dismiss_advice_at_end_turn	
Description: 	Set whether or not advice should be dismissed on ending turn.	
Usage: 		dismiss_advice_at_end_turn(false)
---------------------------------------------		
Command: 	disable_shortcut	
Description: 	Disable or enable a shortcut.	
Usage: 		disable_shortcut("object_id", "function_id", true)
---------------------------------------------		
Command: 	apply_effect_bundle	
Description: 	Apply an effect bundle to a faction for a number of turns (-1 turns means indefinitely).	
Usage: 		apply_effect_bundle("effect_bundle_key", "faction_key", turns)
---------------------------------------------		
Command: 	remove_effect_bundle	
Description: 	Remove a previously applied effect bundle from a faction	
Usage: 		remove_effect_bundle("effect_bundle_key", "faction_key")
---------------------------------------------		
Command: 	apply_effect_bundle_to_force	
Description: 	Apply an effect bundle to a military force (by cqi) for a number of turns (-1 turns means indefinitely).	
Usage: 		apply_effect_bundle("effect_bundle_key", 58 /*force cqi*/, turns)
---------------------------------------------		
Command: 	remove_effect_bundle_from_force	
Description: 	Remove a previously applied effect bundle from a military force (by cqi)	
Usage: 		remove_effect_bundle("effect_bundle_key", 58 /*force cqi*/)
---------------------------------------------		
Command: 	apply_effect_bundle_to_characters_force	
Description: 	Apply an effect bundle to a characters military force (by character cqi) for a number of turns (-1 turns means indefinitely).	
Usage: 		apply_effect_bundle("effect_bundle_key", 58 /*character cqi*/, turns, use_command_queue (true/false))
---------------------------------------------		
Command: 	remove_effect_bundle_from_characters_force	
Description: 	Remove a previously applied effect bundle from a characters military force (by character cqi)	
Usage: 		remove_effect_bundle("effect_bundle_key", 58 /*character cqi*/)
---------------------------------------------		
Command: 	apply_effect_bundle_to_region	
Description: 	Apply an effect bundle to a region for a number of turns (-1 turns means indefinitely).	
Usage: 		apply_effect_bundle_to_region("effect_bundle_key", "region_key", turns)
---------------------------------------------		
Command: 	force_religion_factors	
Description: 	Forces regligion factors to a certain value, please note this will only work on turn 1 and at least 1 region key must be provided. Religions that are not represented by a pair of religion record key and value will be flattened down to 0.f. Numerical religion values added need to be between 0.0 and 1.0, the total of all value pairs must also be in that range.	
Usage: 		force_religion_factors("region_key", "religion_1_key", "religion_1_value", "religion_2_key", "religion_2_value", ...)
---------------------------------------------		
Command: 	remove_effect_bundle_from_region	
Description: 	Remove a previously applied effect bundle from a region	
Usage: 		remove_effect_bundle_from_region("effect_bundle_key", "region_key")
---------------------------------------------		
Command: 	create_agent	
Description: 	create an agent at a position.  Final parameter specified whether the command goes via the command queue	
Usage: 		create_agent("faction_key", "agent_key", "agent_subtype_key", x_position, y_position, "id", true)
---------------------------------------------		
Command: 	instantly_dismantle_building	
Description: 	Dismantle the building in the specified slot	
Usage: 		instantly_dismantle_building("slot_key")
---------------------------------------------		
Command: 	instantly_upgrade_building	
Description: 	Instantly upgrade the building in the specified slot to the specified key	
Usage: 		instantly_upgrade_building("slot_key, upgrade_building_key")
---------------------------------------------		
Command: 	win_next_autoresolve_battle	
Description: 	The specified faction will win the next autoresolve battle	
Usage: 		win_next_autoresolve_battle("faction_key")
---------------------------------------------		
Command: 	modify_next_autoresolve_battle	
Description: 	The next autoresolve battle will add this modifier to the win chance and casualties	
Usage: 		modify_next_autoresolve_battle("attacker win chance, defender win chance, attacker losses modifier (soldiers), defender losses modifier (soldiers), force wipe out loser)")
---------------------------------------------		
Command: 	replenish_action_points	
Description: 	Replenish action points for the specified character	
Usage: 		replenish_action_points("faction:chosokabe,forename:2147274846")
---------------------------------------------		
Command: 	zero_action_points	
Description: 	Zero action points for the specified character	
Usage: 		zero_action_points("faction:chosokabe,forename:2147274846")
---------------------------------------------		
Command: 	override_ui	
Description: 	Enable or disable the specified ui override	
Usage: 		override_ui("disable_end_turn", true)
---------------------------------------------		
Command: 	kill_character	
Description: 	Kill a character  Second parameter indicates whether to destroy the commanded military force (if any).  Final parameter specified whether the command goes via the command queue	
Usage: 		kill_character("faction:chosokabe,forename:2147274846", true, true)
---------------------------------------------		
Command: 	kill_character_and_commanded_unit	
Description: 	Kill a character and associated unit Second parameter indicates whether to destroy the commanded military force (if any).  Final parameter specified whether the command goes via the command queue	
Usage: 		kill_character_and_commanded_unit("faction:chosokabe,forename:2147274846", true, true)
---------------------------------------------		
Command: 	stop_character_convalescing	
Description: 	Instantly stop a character from convalescing	
Usage: 		stop_character_convalescing(card32 character_cqi)
---------------------------------------------		
Command: 	wound_character	
Description: 	Wound a character	
Usage: 		wound_character("faction:chosokabe,forename:2147274846", "convalescence_time", "use_command_queue")
---------------------------------------------		
Command: 	force_agent_action_success_for_human	
Description: 	Force the local faction to succeed at all agent actions	
Usage: 		force_agent_action_success_for_human(true/false)
---------------------------------------------		
Command: 	instantly_repair_building	
Description: 	Repair the building in the specified slot	
Usage: 		instantly_repair_building("slot_key")
---------------------------------------------		
Command: 	render_campaign_to_file	
Description: 	Render campaign game to a set of tga files, enable_campaign_render_to_file must be defined in user script	
Usage: 		render_campaign_to_file("output_folder", "frame_name", frames_per_second, motion_blur_frames, duration(seconds))
---------------------------------------------		
Command: 	force_character_force_into_stance	
Description: 	Forces a character's military force into a military force stance. Second parameter is the stance type	
Usage: 		force_character_force_into_stance("faction:chosokabe,forename:2147274846", "MILITARY_FORCE_ACTIVE_STANCE_TYPE_AMBUSH")
---------------------------------------------		
Command: 	model	
Description: 	Returns a script interface to the campaign model.	
Usage: 		model()
---------------------------------------------		
Command: 	set_region_abandoned	
Description: 	Set a region as abandoned, already abandoned regions will do nothing	
Usage: 		set_region_abandoned(REGION_KEY)
---------------------------------------------		
Command: 	override_attacker_win_chance_prediction	
Description: 	Set the attackers predicted win chance percentage. This will not change the result.	
Usage: 		override_attacker_win_chance_prediction(prediction percentage)
---------------------------------------------		
Command: 	transfer_region_to_faction	
Description: 	Transfer a region ownership to a faction.	
Usage: 		transfer_region_to_faction("region", "faction")
---------------------------------------------		
Command: 	suppress_all_event_feed_event_types	
Description: 	Forces all event feed messages to be suppressed/unsuppressed	
Usage: 		suppress_all_event_feed_event_types(true)
---------------------------------------------		
Command: 	whitelist_event_feed_event_type	
Description: 	Removes a targeted event feed event from the set of suppressed events	
Usage: 		whitelist_event_feed_event_type("agent_action_vs_armyevent_feed_target_agent_faction")
---------------------------------------------		
Command: 	event_feed_event_type_pending	
Description: 	Returns true if there is a targeted event feed event of the specified type that was issued since the suppression was applied and is currently being suppressed.	
Usage: 		event_feed_event_type_pending("agent_action_vs_armyevent_feed_target_agent_faction", "wh_main_emp_empire")
---------------------------------------------		
Command: 	highlight_movement_extents	
Description: 	Highlights and pulses the  movement extents	
Usage: 		highlight_movement_extents(activate)
---------------------------------------------		
Command: 	highlight_selected_character_zoc	
Description: 	Highlight zoc of selected character	
Usage: 		highlight_selected_character_zoc(activate)
---------------------------------------------		
Command: 	spawn_rogue_army	
Description: 	Spawn a rogue army, will fail if the rogue army is alive or is flagged to naturally spawn	
Usage: 		spawn_rogue_army(String faction_key, uint16 x, uint16 y)
---------------------------------------------		
Command: 	create_storm_for_region	
Description: 	Create a storm in the targeted region with the desired strength	
Usage: 		create_storm_for_region(String region_key, card32 strength, card32 max_turns_duration)
---------------------------------------------		
Command: 	heal_garrison	
Description: 	Heals the Garrison in a region back to full health	
Usage: 		heal_garrison(card32 region_cqi)
---------------------------------------------		
Command: 	trigger_mission	
Description: 	Start a player mission. Returns true if launched successfully. /!\WILL ALWAYS RETURN TRUE IF YOU USE THE COMMAND QUEUE/!\	
Usage: 		trigger_mission("faction_key", "mission_key", fire_immediately, use_command_queue)
---------------------------------------------		
Command: 	trigger_dilemma	
Description: 	Start a player mission. Returns true if launched successfully.	
Usage: 		trigger_dilemma("faction_key", "dilemma_key", fire_immediately)
---------------------------------------------		
Command: 	trigger_incident	
Description: 	Start a player mission. Returns true if launched successfully.	
Usage: 		trigger_incident("faction_key", "incident_key", fire_immediately)
---------------------------------------------		
Command: 	trigger_custom_mission	
Description: 	Start a player mission	
Usage: 		trigger_custom_mission("faction_key", "mission_key", use_command_queue)
---------------------------------------------		
Command: 	trigger_custom_mission_from_string	
Description: 	Start a player mission	
Usage: 		trigger_custom_mission_from_string("faction_key", "mission_def_str", use_command_queue)
---------------------------------------------		
Command: 	cancel_custom_mission	
Description: 	Cancel a player mission	
Usage: 		cancel_custom_mission("faction_key", "mission_key", use_command_queue)
---------------------------------------------		
Command: 	trigger_custom_dilemma	
Description: 	Start a player dilemma	
Usage: 		trigger_custom_dilemma("faction_key", "dilemma_record_key", "first_choice_payload", "second_choice_payload")
---------------------------------------------		
Command: 	trigger_custom_dilemma_for_character	
Description: 	Start a player dilemma using a character CQI or character name	
Usage: 		trigger_custom_dilemma_for_character("character_key", "dilemma_record_key", "first_choice_payload", "second_choice_payload")
---------------------------------------------		
Command: 	trigger_custom_incident	
Description: 	Start a player mission	
Usage: 		trigger_custom_incident("faction_key", "incident_key", fire_immediately, payload)
---------------------------------------------		
Command: 	grant_faction_handover	
Description: 	Hand over faction to control of another	
Usage: 		grant_faction_handover("recipient", "handed_over", first_possible_turn, last_possible_turn, context_if_avaliable)
---------------------------------------------		
Command: 	set_campaign_ai_force_all_factions_boardering_humans_to_have_invasion_behaviour	
Description: 	Force minor (non-rebel) factions to have the region group expansion behaviour if they boarder player owned territory.	
Usage: 		set_campaign_ai_force_all_factions_boardering_humans_to_have_invasion_behaviour(true/false)
---------------------------------------------		
Command: 	set_campaign_ai_force_all_factions_boardering_human_vassals_to_have_invasion_behaviour	
Description: 	Force minor (non-rebel) factions to have the region group expansion behaviour if they boarder player protected factions.	
Usage: 		set_campaign_ai_force_all_factions_boardering_human_vassals_to_have_invasion_behaviour(true/false)
---------------------------------------------		
Command: 	technology_osmosis_for_playables_enable_culture	
Description: 	Enable tech osmosis for playable factions of the specific culture	
Usage: 		technology_osmosis_for_playables_enable_culture(culture_key)
---------------------------------------------		
Command: 	technology_osmosis_for_playables_enable_all	
Description: 	Enable tech osmosis for playable factions	
Usage: 		technology_osmosis_for_playables_enable_all()
---------------------------------------------		
Command: 	force_make_vassal	
Description: 	Force a faction to become the master of another faction	
Usage: 		force_make_vassal("france", "prussia") (force france to be the master of prussia)
---------------------------------------------		
Command: 	force_alliance	
Description: 	Force two factions to become allies	
Usage: 		force_alliance("france", "prussia", true) (force france and prussia to become military allies)
---------------------------------------------		
Command: 	force_grant_military_access	
Description: 	Force a faction to grant another military access	
Usage: 		force_grant_military_access("france", "prussia", false) (force france and prussia to grant soft military access)
---------------------------------------------		
Command: 	force_rebellion_in_region	
Description: 	Force a rebellion of a specified size in the specified region	
Usage: 		force_rebellion_in_region("france", 10, "unit_list", x, y, false) (force a rebellion in france with 10 units, don't suppress message)
---------------------------------------------		
Command: 	treasury_mod	
Description: 	modify the specified faction's treasury by the specified amount	
Usage: 		treasury_mod("faction_key", amount)
---------------------------------------------		
Command: 	lock_technology	
Description: 	Lock a technology and all children	
Usage: 		lock_technology("faction_key", "technology_key")
---------------------------------------------		
Command: 	unlock_technology	
Description: 	unlock a technology and all children	
Usage: 		unlock_technology("faction_key", "technology_key")
---------------------------------------------		
Command: 	set_general_offered_dilemma_permitted	
Description: 	Enable or disable the general offered dilemma	
Usage: 		set_general_offered_dilemma_permitted(true)
---------------------------------------------		
Command: 	instant_set_building_health_percent	
Description: 	Alter building health	
Usage: 		instant_set_building_health_percent(region key, building level or chain key, health percent)
---------------------------------------------		
Command: 	make_son_come_of_age	
Description: 	Make a character come of age	
Usage: 		make_son_come_of_age(character_lookup_string)
---------------------------------------------		
Command: 	allow_player_to_embark_navies	
Description: 	Set whether the player is allowed to embark armies and agents onto navies	
Usage: 		allow_player_to_embark_navies(true)
---------------------------------------------		
Command: 	force_change_cai_faction_personality	
Description: 	Force faction X to take on DB defined personality Y	
Usage: 		force_change_cai_faction_personality("takeda", "random")
---------------------------------------------		
Command: 	set_ignore_end_of_turn_public_order	
Description: 	Set whether we ignore end of turn public order being negative to have riots or rebellions - default false, ie must be negative at end of turn	
Usage: 		set_ignore_end_of_turn_public_order(true)
---------------------------------------------		
Command: 	set_only_allow_basic_recruit_stance	
Description: 	Stops military forces automatically enter non default recruitment stances.	
Usage: 		set_only_allow_basic_recruit_stance(true)
---------------------------------------------		
Command: 	set_imperium_level_change_disabled	
Description: 	Disable all imperium level changes	
Usage: 		set_imperium_level_change_disabled(true)
---------------------------------------------		
Command: 	set_character_experience_disabled	
Description: 	Set whether we ignore character experience for all character types false	
Usage: 		set_character_experience_disabled(true)
---------------------------------------------		
Command: 	set_character_skill_tier_limit	
Description: 	Set limit on tiers available in skill tree	
Usage: 		set_character_skill_tier_limit(value) - 0 is first available level, etc
---------------------------------------------		
Command: 	set_event_generation_enabled	
Description: 	Set whether event generation is enabled	
Usage: 		set_event_generation_enabled(value)
---------------------------------------------		
Command: 	autosave_at_next_opportunity	
Description: 	Set to autosave when next possible	
Usage: 		autosave_at_next_opportunity()
---------------------------------------------		
Command: 	add_event_restricted_unit_record	
Description: 	Prevent a unit from being recruited until a scripted event has occurred	
Usage: 		add_event_restricted_unit_record("unit_record")
---------------------------------------------		
Command: 	remove_event_restricted_unit_record	
Description: 	Remove a restriction added by 'add_event_restricted_unit_record'	
Usage: 		remove_event_restricted_unit_record("unit_record")
---------------------------------------------		
Command: 	add_event_restricted_unit_record_for_faction	
Description: 	Prevent a unit from being recruited until a scripted event has occurred. Restriction only applies to specified faction	
Usage: 		add_event_restricted_unit_record("unit_record", "faction_key")
---------------------------------------------		
Command: 	remove_event_restricted_unit_record_for_faction	
Description: 	Remove a restriction added by 'add_event_restricted_unit_record_for_faction'	
Usage: 		remove_event_restricted_unit_record_for_faction("unit_record", "faction_key")
---------------------------------------------		
Command: 	add_event_restricted_building_record	
Description: 	Prevent a building from being build until a scripted event has occurred	
Usage: 		add_event_restricted_building_record("building_record")
---------------------------------------------		
Command: 	remove_event_restricted_building_record	
Description: 	Remove a restriction added by 'add_event_restricted_building_record'	
Usage: 		remove_event_restricted_building_record("building_record")
---------------------------------------------		
Command: 	add_event_restricted_building_record_for_faction	
Description: 	Prevent a building from being build until a scripted event has occurred. Restriction only applies to specified faction	
Usage: 		add_event_restricted_building_record_for_faction("building_record", "faction_key")
---------------------------------------------		
Command: 	remove_event_restricted_building_record_for_faction	
Description: 	Remove a restriction added by 'add_event_restricted_building_record_for_faction'	
Usage: 		remove_event_restricted_building_record_for_faction("building_record", "faction_key")
---------------------------------------------		
Command: 	set_ai_uses_human_display_speed	
Description: 	Limit tick speedup for visible characters, making AI use lower speed as if the human's turn	
Usage: 		set_ai_uses_human_display_speed(value)
---------------------------------------------		
Command: 	set_public_order_of_province_for_region	
Description: 	Set public order value for province this region is in	
Usage: 		set_public_order_of_province_for_region(region_key, order)
---------------------------------------------		
Command: 	set_public_order_disabled_for_province_for_region	
Description: 	Set public order disabled for province for region	
Usage: 		set_public_order_disabled_for_province_for_region(region_key, is_disabled)
---------------------------------------------		
Command: 	set_public_order_disabled_for_province_for_region_for_all_factions_and_set_default	
Description: 	Set public order disabled for province for region for all factions	
Usage: 		set_public_order_disabled_for_province_for_region_for_all_factions_and_set_default(region_key, is_disabled)
---------------------------------------------		
Command: 	make_region_visible_in_shroud	
Description: 	Uncover shroud for region	
Usage: 		make_region_visible_in_shroud(faction_key, region_key)
---------------------------------------------		
Command: 	make_region_seen_in_shroud	
Description: 	Uncover shroud for region	
Usage: 		make_region_seen_in_shroud(faction_key, region_key)
---------------------------------------------		
Command: 	modify_faction_slaves_in_a_faction	
Description: 	Change the number of faction slaves in a faction. Positive increases, negative decreases.	
Usage: 		modify_faction_slaves_in_a_faction(faction_key, change_in_slaves)
---------------------------------------------		
Command: 	modify_faction_slaves_in_a_faction_province	
Description: 	Change the number of faction slaves in a faction province (for the provided region key). Positive increases, negative decreases.	
Usage: 		modify_faction_slaves_in_a_faction_province(region_key, change_in_slaves)
---------------------------------------------		
Command: 	add_development_points_to_region	
Description: 	Add development points to a region	
Usage: 		add_development_points_to_region(region_key, num_points)
---------------------------------------------		
Command: 	faction_set_food_factor_multiplier	
Description: 	Set food factor multiplier for the specified faction	
Usage: 		faction_set_food_factor_multiplier(faction_key, food_factor_key, multiplier)
---------------------------------------------		
Command: 	faction_set_food_factor_value	
Description: 	Set food factor base value for the specified faction	
Usage: 		faction_set_food_factor_value(faction_key, food_factor_key, value)
---------------------------------------------		
Command: 	faction_mod_food_factor_value	
Description: 	Mod food factor base value for the specified faction	
Usage: 		faction_mod_food_factor_value(faction_key, food_factor_key, delta)
---------------------------------------------		
Command: 	faction_add_pooled_resource	
Description: 	Add the specified amount to the specified pool as the specified factor. Clamped to pool and factor bounds	
Usage: 		faction_add_pooled_resource(faction_key, resource_key, factor_key, amount (can be negative))
---------------------------------------------		
Command: 	add_interactable_campaign_marker	
Description: 	Add an interactable campaign marker to the campaign map, returns AREA_TRIGGER_ENTER/EXIT events when appropriate	
Usage: 		add_interactable_campaign_marker(unique_id, marker_info_key, log_position_x, log_position_y, radius_hexes, faction_record (can be empty), subculture_record (can be empty))
---------------------------------------------		
Command: 	remove_interactable_campaign_marker	
Description: 	Remove an interactable campaign marker from the campaign map	
Usage: 		remove_interactable_campaign_marker( unique_id )
---------------------------------------------		
Command: 	complete_scripted_mission_objective	
Description: 	Complete a scripted mission objective	
Usage: 		complete_scripted_mission_objective(string mission_key, string script_key, bool success)
---------------------------------------------		
Command: 	set_scripted_mission_text	
Description: 	Set the text of a scripted mission objective	
Usage: 		set_scripted_mission_text(string mission_key, string script_key, string override_text_key)
---------------------------------------------		
Command: 	set_scripted_mission_position	
Description: 	Set the position of a scripted mission objective	
Usage: 		set_scripted_mission_position(string mission_key, string script_key, card16 pos_x, card16 pos_y)
---------------------------------------------		
Command: 	spawn_unique_agent	
Description: 	Spawn a unique agent using its default spawn behaviour	
Usage: 		spawn_unique_agent( card32 faction_cqi, String agent_record, bool force )
---------------------------------------------		
Command: 	spawn_unique_agent_at_region	
Description: 	Spawn a unique agent at the specified region	
Usage: 		spawn_unique_agent_at_region(card32 faction_cqi, String agent_record, card32 region_cqi, bool force)
---------------------------------------------		
Command: 	spawn_unique_agent_at_character	
Description: 	Spawn a unique agent at the specified character	
Usage: 		spawn_unique_agent_at_character(card32 faction_cqi, String agent_record, card32 character_cqi, bool force)
---------------------------------------------		
Command: 	add_character_vfx	
Description: 	Add VFX to specified character	
Usage: 		add_character_vfx(card32 character_cqi, String vfx_lookup_key, bool show_in_shroud)
---------------------------------------------		
Command: 	remove_character_vfx	
Description: 	Remove VFX from specified character	
Usage: 		remove_character_vfx(card32 character_cqi, String vfx_type)
---------------------------------------------		
Command: 	add_garrison_residence_vfx	
Description: 	Add VFX to specified garrison_residence	
Usage: 		add_garrison_residence_vfx(card32 garrison_residence_cqi, String vfx_lookup_key, bool show_in_shroud))
---------------------------------------------		
Command: 	remove_garrison_residence_vfx	
Description: 	Remove VFX from specified garrison_residence	
Usage: 		remove_garrison_residence_vfx(card32 garrison_residence_cqi, String vfx_type)
---------------------------------------------		
Command: 	pooled_resource_mod	
Description: 	Modify the specified factions pooled resource by the specified amount	
Usage: 		pooled_resource_mod( card32 faction_cqi, String resource_key, String factor_key, int32 amount )
---------------------------------------------		
Command: 	perform_ritual	
Description: 	Perform a ritual, it must be available and valid for this call to succeed. Target faction assumed to be self if empty. Ritual chain only required for rituals in chains, can be empty.	
Usage: 		perform_ritual(String performing_faction, String target_faction, String ritual_key, String chain_key)
---------------------------------------------		
Command: 	rollback_linked_ritual_chain	
Description: 	Rollback a linked ritual chain to the specified stage. Safe to call if the ritual isn't at this stage yet	
Usage: 		rollback_linked_ritual_chain(String campaign_group_ritual_chain_key, card32 stage)
---------------------------------------------		
Command: 	set_ritual_unlocked	
Description: 	Lock/Unlock a ritual for the specified faction	
Usage: 		set_ritual_unlocked(card32 faction_cqi, String ritual_key, bool unlock)
---------------------------------------------		
Command: 	set_ritual_chain_unlocked	
Description: 	Lock/Unlock a ritual chain for the specified faction	
Usage: 		unlock_ritual_chain(card32 faction_cqi, String ritual_chain_key, bool unlock)
---------------------------------------------		
Command: 	set_ritual_in_chain_unlocked	
Description: 	Unlock a ritual in a chain for the specified faction	
Usage: 		unlock_ritual_in_chain(card32 faction_cqi, String ritual_key, String ritual_chain_key, bool unlock)
---------------------------------------------		
Command: 	make_diplomacy_available	
Description: 	Make diplomacy available between two factions	
Usage: 		make_diplomacy_available(String lhs_faction_key, String rhs_faction_key)
---------------------------------------------		
Command: 	remove_unit_from_character	
Description: 	Remove the first instance of the specified unit from the force commanded by the specified character	
Usage: 		remove_unit_from_character(String character_lookup_string, String main_unit_record_key)
---------------------------------------------		
Command: 	skip_winds_of_magic_gambler	
Description: 	Makes next battle skip the winds of magic gambler phase	
Usage: 		skip_winds_of_magic_gambler(bool skip)
---------------------------------------------		
Command: 	spawn_character_to_pool	
Description: 	Spawn a new character in a faction recruitment pool	
Usage: 		spawn_character_to_pool(string faction_key, string forename_key, string family_name_key, string clan_name_key, string other_name_key, int age, bool male, string agent_key, string agent_subtype_key, bool is_immortal, string art_set_id)
---------------------------------------------		
Command: 	override_building_chain_display	
Description: 	Override the display of a building chain so that it appears as another building chain	
Usage: 		override_building_chain_display(string chain_key, string override_chain_key, string region_key (optional))
---------------------------------------------		
Command: 	pending_battle_add_scripted_tile_upgrade_tag	
Description: 	Add the specified tile upgrade to the currently active pending battle. Returns true if successful	
Usage: 		pending_battle_add_scripted_tile_upgrade_tag(String tile_upgrade_tag)
---------------------------------------------		
Command: 	pending_battle_remove_scripted_tile_upgrade_tags	
Description: 	Remove the specified tile upgrade to the currently active pending battle. Returns true if successful	
Usage: 		pending_battle_remove_scripted_tile_upgrade_tags(String tile_upgrade_tag)
---------------------------------------------		
Command: 	find_valid_spawn_location_for_character_from_settlement	
Description: 	Utilise the pathfinder to locate a valid spawn point for a character, based around a settlement. Returns -1, -1 if invalid	
Usage: 		find_valid_spawn_location_for_character_from_settlement(String faction_key, String settlement_region_key, bool rebellion_spawn, bool on_sea, (optional) int rebel_spawn_distance)
---------------------------------------------		
Command: 	find_valid_spawn_location_for_character_from_character	
Description: 	Utilise the pathfinder to locate a valid spawn point for a character, based around another character. Returns -1, -1 if invalid	
Usage: 		find_valid_spawn_location_for_character_from_character(String faction_key, String character_lookup)
---------------------------------------------		
Command: 	find_valid_spawn_location_for_character_from_position	
Description: 	Utilise the pathfinder to locate a valid spawn point for a character, based around a position. Returns -1, -1 if invalid	
Usage: 		find_valid_spawn_location_for_character_from_position(String faction_key, int start_x, int start_y, bool on_sea)
---------------------------------------------		
Command: 	cai_strategic_stance_manager_block_all_stances_but_that_specified_towards_target_faction	
Description: 	cai_strategic_stance_manager_block_all_stances_but_that_specified_towards_target_faction	
Usage: 		cai_strategic_stance_manager_block_all_stances_but_that_specified_towards_target_faction("stance_managing_faction_key", "target_faction_key", "stance_type")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_promote_specified_stance_towards_target_faction	
Description: 	cai_strategic_stance_manager_promote_specified_stance_towards_target_faction	
Usage: 		cai_strategic_stance_manager_promote_specified_stance_towards_target_faction("stance_managing_faction_key", "target_faction_key", "stance_type")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_promote_specified_stance_towards_target_faction_by_number	
Description: 	cai_strategic_stance_manager_promote_specified_stance_towards_target_faction_by_number	
Usage: 		cai_strategic_stance_manager_promote_specified_stance_towards_target_faction_by_number("stance_managing_faction_key", "target_faction_key", "stance_type_number")
---------------------------------------------		
Command: 	cai_force_personality_change	
Description: 	cai_force_personality_change	
Usage: 		cai_force_personality_change("faction_key")
---------------------------------------------		
Command: 	cai_force_personality_change_with_override_round_number	
Description: 	cai_force_personality_change_with_override_round_number	
Usage: 		cai_force_personality_change_with_override_round_number("faction_key", "override_round_numer")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_force_stance_update_between_factions	
Description: 	cai_strategic_stance_manager_force_stance_update_between_factions	
Usage: 		cai_strategic_stance_manager_force_stance_update_between_factions("stance_managing_faction_key", "target_faction_key")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_set_stance_promotion_between_factions_for_a_given_stance	
Description: 	cai_strategic_stance_manager_set_stance_promotion_between_factions_for_a_given_stance	
Usage: 		cai_strategic_stance_manager_set_stance_promotion_between_factions_for_a_given_stance("stance_managing_faction_key", "target_faction_key", "stance_type_number", "start_round", "start_level", "end_round", "end_level")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_clear_all_promotions_between_factions	
Description: 	cai_strategic_stance_manager_clear_all_promotions_between_factions	
Usage: 		cai_strategic_stance_manager_clear_all_promotions_between_factions("stance_managing_faction_key", "target_faction_key")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_set_stance_blocking_between_factions_for_a_given_stance	
Description: 	cai_strategic_stance_manager_set_stance_blocking_between_factions_for_a_given_stance	
Usage: 		cai_strategic_stance_manager_set_stance_blocking_between_factions_for_a_given_stance("stance_managing_faction_key", "target_faction_key", "stance_type_number", "final_inclusive_blocking_round")
---------------------------------------------		
Command: 	cai_strategic_stance_manager_clear_all_blocking_between_factions	
Description: 	cai_strategic_stance_manager_clear_all_blocking_between_factions	
Usage: 		cai_strategic_stance_manager_clear_all_blocking_between_factions("stance_managing_faction_key", "target_faction_key")
---------------------------------------------		
Command: 	cai_disable_movement_for_character	
Description: 	cai_disable_movement_for_character	
Usage: 		cai_disable_movement_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	cai_disable_movement_for_faction	
Description: 	cai_disable_movement_for_faction	
Usage: 		cai_disable_movement_for_faction("faction_key")
---------------------------------------------		
Command: 	cai_enable_movement_for_character	
Description: 	cai_enable_movement_for_character	
Usage: 		cai_enable_movement_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	cai_enable_movement_for_faction	
Description: 	cai_enable_movement_for_faction	
Usage: 		cai_enable_movement_for_faction("faction_key")
---------------------------------------------		
Command: 	cai_disable_command_assignment_for_character	
Description: 	cai_disable_command_assignment_for_character	
Usage: 		cai_disable_command_assignment_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	cai_enable_command_assignment_for_character	
Description: 	cai_enable_command_assignment_for_character	
Usage: 		cai_enable_command_assignment_for_character("faction:f,type:t,ability:a,surname:s,forename:f,garrison:g,x:1,y:2,r:3")
---------------------------------------------		
Command: 	faction_offers_peace_to_other_faction	
Description: 	faction_offers_peace_to_other_faction	
Usage: 		faction_offers_peace_to_other_faction("proposer_key", "reciever_key")
---------------------------------------------		
Command: 	disable_pathfinding_restriction	
Description: 	disable_pathfinding_restriction	
Usage: 		disable_pathfinding_restriction(id)
---------------------------------------------		
Command: 	set_character_immortality	
Description: 	set_character_immortality	
Usage: 		set_character_immortality(character_lookup_string, is_immortal)
---------------------------------------------		
Command: 	set_character_unique	
Description: 	set_character_unique	
Usage: 		set_character_unique(character_lookup_string, is_unique)
---------------------------------------------		
Command: 	spawn_character_into_family_tree	
Description: 	spawn_character_into_family_tree	
Usage: 		spawn_character_into_family_tree(faction, forename_key, family_name_key, clan_name_key, other_name_key, age, male, father_lookup, mother_lookup, is_immortal, art_set_id, make_heir)
---------------------------------------------		
Command: 	appoint_character_to_most_expensive_force	
Description: 	appoint_character_to_most_expensive_force	
Usage: 		appoint_character_to_most_expensive_force(character_lookup_string)
---------------------------------------------		
Command: 	modify_character_personal_loyalty_factor	
Description: 	modify_character_personal_loyalty_factor	
Usage: 		modify_character_personal_loyalty_factor(character_lookup_string, loyalty_change)
---------------------------------------------		
Command: 	play_movie_in_ui	
Description: 	play_movie_in_ui	
Usage: 		play_movie_in_ui(att_seal_3)
---------------------------------------------		
Command: 	trigger_music_state	
Description: 	trigger_music_state	
Usage: 		trigger_music_state(string music_faction, float valid_timer, bool instant_change, string optional_sound_event)
---------------------------------------------		
Command: 	is_benchmark_mode	
Description: 	is_benchmark_mode	
Usage: 		returns if current campaign is a benchmark
---------------------------------------------		
Command: 	cinematic	
Description: 	creates a cinematic scripting interface	
Usage: 		This interface provides functions like cindy_playback
---------------------------------------------		
Command: 	filesystem_lookup	
Description: 	Perform a VFS lookup in the specified path (root is working_data/) for files matching the pattern. Returns a comma-delimited list of files found	
Usage: 		filesystem_lookup("/script/", "*.lua")
---------------------------------------------		
Command: 	disable_event_feed_events	
Description: 	Enable or disable event feed events by category, subcategory or event (any list can be empty).  Note that if you disable something by for example subcategory then you can only re-enable it by subcategory, enabling the category it is in (or the specific event) will not re-enable it.	
Usage: 		disable_event_feed_events(true, "category_key_1;category_key_2", "", "event_key")
---------------------------------------------		
Command: 	lock_starting_general_recruitment	
Description: 	lock recruitment of a starting general. Works for convalescing generals as well	
Usage: 		lock_starting_general_recruitment("character_startpos_id", "faction_key")
---------------------------------------------		
Command: 	unlock_starting_general_recruitment	
Description: 	Unlock recruitment of a starting general. Works for convalescing generals as well	
Usage: 		unlock_starting_general_recruitment("character_startpos_id", "faction_key")
---------------------------------------------		
Command: 	toggle_dilemma_generation	
Description: 	Set dilemma generation to be allowed or not	
Usage: 		toggle_dilemma_generation(<bool>)
---------------------------------------------		
Command: 	toggle_incident_generation	
Description: 	Set incident generation to be allowed or not	
Usage: 		toggle_incident_generation(<bool>)
---------------------------------------------		
Command: 	toggle_mission_generation	
Description: 	Set mission generation to be allowed or not	
Usage: 		toggle_mission_generation(<bool>)
---------------------------------------------		
Command: 	add_building_to_force	
Description: 	Add building to a military force	
Usage: 		add_building_to_force(<military_force>, <building_record_key>)
---------------------------------------------		
Command: 	add_building_to_settlement	
Description: 	Add building to a settlement. Returns true if successful	
Usage: 		add_building_to_settlement(String region_key, String building_level_key)
---------------------------------------------		
Command: 	add_units_to_faction_mercenary_pool	
Description: 	Add count of a specified unit to the factions mercenary pool	
Usage: 		add_units_to_faction_mercenary_pool(faction_cqi, "awesome_unit", 2)
---------------------------------------------		
Command: 	add_units_to_province_mercenary_pool_by_region	
Description: 	Add count of a specified unit to the province mercenary pool	
Usage: 		add_units_to_province_mercenary_pool_by_region(region_key, "awesome_unit", 2)
---------------------------------------------		
Command: 	add_scripted_composite_scene_to_settlement_port	
Description: 	Add a composite scene to a settlements port, returns true if action was successful on the campaign model level	
Usage: 		add_scripted_composite_scene_to_settlement_port(name, composite_scene , one_shot, visible_in_seen_shroud, visible_in_unseen_shroud
---------------------------------------------		
Command: 	add_scripted_composite_scene_to_settlement	
Description: 	Add a composite scene to a settlement, returns true if action was successful on the campaign model level	
Usage: 		add_scripted_composite_scene_to_settlement(name, composite_scene, facing_pos_logical_x, facing_pos_logical_y, one_shot, visible_in_seen_shroud,visible_in_unseen_shroud
---------------------------------------------		
Command: 	add_scripted_composite_scene_to_logical_position	
Description: 	Add a composite scene to a logical position, returns true if action was successful on the campaign model level	
Usage: 		add_scripted_composite_scene_to_logical_position(name, composite_scene, logical_x, logical_y, facing_pos_logical_x, facing_pos_logical_y, one_shot, visible_in_seen_shroud, visible_in_unseen_shroud)
---------------------------------------------		
Command: 	remove_scripted_composite_scene	
Description: 	Remove a scripted composite scene, returns true if action was successful on the campaign model level	
Usage: 		remove_scripted_composite_scene(name)
---------------------------------------------		
Command: 	add_foreign_slot_set_to_region_for_faction	
Description: 	Add the specified foreign slot set to the target region, for the target faction. Returns the foreign slot manager of the faction (may be null if parameters are invalid)	
Usage: 		add_foreign_slot_set_to_region_for_faction(faction_cqi, region_cqi, slot_set_key)
---------------------------------------------		
Command: 	remove_faction_foreign_slots_from_region	
Description: 	Add the specified foreign slot set to the target region, for the target faction.	
Usage: 		add_foreign_slot_set_to_region_for_faction(faction_cqi, region_cqi)
---------------------------------------------		
Command: 	foreign_slot_instantly_upgrade_building	
Description: 	Instantly upgrade the building in the specified foreign slot	
Usage: 		foreign_slot_instantly_upgrade_building(foreign_slot_cqi, upgrade_building_key)
---------------------------------------------		
Command: 	foreign_slot_instantly_dismantle_building	
Description: 	Instantly dismantle the building in the specified foreign slot	
Usage: 		foreign_slot_instantly_dismantle_building(foreign_slot_cqi)
---------------------------------------------		
Command: 	trigger_mission_with_targets	
Description: 	Trigger a mission with specified targets. Pass zero for CQI's if you don't want a target set.	
Usage: 		bool trigger_mission_with_targets(owning_faction_cqi, mission_key, faction_cqi, secondary_faction_cqi, character_cqi, military_force_cqi, region_cqi, settlement_cqi)
---------------------------------------------		
Command: 	trigger_incident_with_targets	
Description: 	Trigger an incident with specified targets. Pass zero for CQI's if you don't want a target set.	
Usage: 		bool trigger_incident_with_targets(owning_faction_cqi, incident_key, faction_cqi, secondary_faction_cqi, character_cqi, military_force_cqi, region_cqi, settlement_cqi)
---------------------------------------------		
Command: 	trigger_dilemma_with_targets	
Description: 	Trigger an dilemma with specified targets. Pass zero for CQI's if you don't want a target set.	
Usage: 		bool trigger_dilemma_with_targets(owning_faction_cqi, dilemma_key, faction_cqi, secondary_faction_cqi, character_cqi, military_force_cqi, region_cqi, settlement_cqi)
---------------------------------------------		
Command: 	trigger_intrigue	
Description: 	Triggers an intrigue incident which improves or worsens diplomatic relations between two factions. Fourth boolean argument improves relations if set to true, worsens them if set to false. Fifth argument exempts the issuing faction from the influence cost if true.	
Usage: 		trigger_intrigue(issuing faction key, first target faction key, second target faction key, should_improve, exempt_from_cost)
---------------------------------------------		
Command: 	apply_dilemma_diplomatic_bonus	
Description: 	Directly applies a diplomatic bonus or penalty between two factions, as if it had come from a dilemma. The bonus should be an integer between -6 and +6, each integer value of which corresponds to a change type (from PENALTY_XXXLARGE (-6) to BONUS_XXXLARGE (+6)) which carries a diplomatic attitude modifier that is actually applied.	
Usage: 		apply_dilemma_diplomatic_penalty(first_faction_key, second_faction_key, attitude_bonus)
---------------------------------------------		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
